import React, { useState } from 'react';
import { CalculatorCard } from '../CalculatorCard';
import { InputField } from '../InputField';

export function CoCCalculator() {
  const [annualCashFlow, setAnnualCashFlow] = useState('');
  const [cashInvested, setCashInvested] = useState('');
  const [result, setResult] = useState();
  const [errors, setErrors] = useState({});

  const validate = () => {
    const newErrors = {};
    if (!annualCashFlow || isNaN(annualCashFlow)) {
      newErrors.annualCashFlow = 'Please enter a valid annual cash flow';
    }
    if (!cashInvested || isNaN(cashInvested) || Number(cashInvested) <= 0) {
      newErrors.cashInvested = 'Please enter a valid cash invested amount';
    }
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleCalculate = () => {
    if (validate()) {
      const coc = (Number(annualCashFlow) / Number(cashInvested)) * 100;
      setResult(coc.toFixed(2) + '%');
    }
  };

  const handleClear = () => {
    setAnnualCashFlow('');
    setCashInvested('');
    setResult(undefined);
    setErrors({});
  };

  return (
    <CalculatorCard
      title="Cash-on-Cash Return (CoC)"
      description="Measures return on actual cash investment"
      formula="CoC = (Annual Cash Flow / Cash Invested) Ã— 100"
      result={result}
      onCalculate={handleCalculate}
      onClear={handleClear}
    >
      <InputField
        label="Annual Cash Flow"
        value={annualCashFlow}
        onChange={setAnnualCashFlow}
        tooltip="Net cash flow generated by the property annually"
        error={errors.annualCashFlow}
      />
      <InputField
        label="Cash Invested"
        value={cashInvested}
        onChange={setCashInvested}
        tooltip="Total amount of cash invested in the property"
        error={errors.cashInvested}
      />
    </CalculatorCard>
  );
}